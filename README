SYNOPSIS
        use Mock::Sub;

        my $foo = Mock::Sub->mock('Package::foo');
        my $bar = Mock::Sub->mock('Package::bar');

        # wait until the mocked sub is called

        Package::foo();

        say $foo->name;         # name of sub that's mocked
        say $foo->called;       # was the sub called?
        say $foo->call_count;   # how many times was it called?

        # create an object to reduce typing

        my $mock = Mock::Sub->new;
    
        my $foo = $mock->('Package::foo');
        my $bar = $mock->('Package::bar');

        # have the mocked sub return something when it's called

        $foo = $mock->('Package::foo', return_value => 'True');

        # have the mocked sub perform an action

        $foo = $mock->('Package::foo', side_effect => sub { die "eval catch"; });
    
METHODS
AUTHOR
    Steve Bertrand, `<steveb at cpan.org>'

BUGS
    Please report any bugs or feature requests to `bug-test-mocksub at
    rt.cpan.org', or through the web interface at
    http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Test-MockSub. I will be
    notified, and then you'll automatically be notified of progress on your
    bug as I make changes.

SUPPORT
    You can find documentation for this module with the perldoc command.

        perldoc Mock::Sub

    You can also look for information at:

    * RT: CPAN's request tracker (report bugs here)
        http://rt.cpan.org/NoAuth/Bugs.html?Dist=Test-MockSub

ACKNOWLEDGEMENTS
LICENSE AND COPYRIGHT
    Copyright 2015 Steve Bertrand.

    This program is free software; you can redistribute it and/or modify it
    under the terms of either: the GNU General Public License as published
    by the Free Software Foundation; or the Artistic License.

    See http://dev.perl.org/licenses/ for more information.

